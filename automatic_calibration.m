function [cameraParams] = automatic_calibration
clear all

imaqtool()

vid = videoinput('kinect', 1, 'RGB_1280x960');
src = getselectedsource(vid);

vid.FramesPerTrigger = 161;

vid.LoggingMode = 'disk';

diskLogger = VideoWriter('test_vid1.avi', 'Uncompressed AVI');

vid.DiskLogger = diskLogger;

diskLogger.FrameRate = 30;

preview(vid);

choice = questdlg('Press OK to Start Calibration', 'Calibration','OK','OK');
switch choice
    case 'OK'
        start(vid);
end

pause(20);

stoppreview(vid);

closepreview(vid);

a=VideoReader('test_vid1.avi'); % Reference: https://www.youtube.com/watch?v=AI-1ch6CHkI

for i = 1:20;
    for img = 1:8:a.NumberOfFrames;
        filename=strcat('frame',num2str(img),'.jpg');
        b = read(a, img);
        imwrite(b,filename);
    end
end

pause(10);

cameraCalibrator()

% Auto-generated by cameraCalibrator app on 08-Sep-2016
%-------------------------------------------------------


% Define images to process
imageFileNames = {'frame1.jpg',...
    'frame9.jpg',...
    'frame17.jpg',...
    'frame25.jpg',...
    'frame33.jpg',...
    'frame41.jpg',...
    'frame49.jpg',...
    'frame57.jpg',...
    'frame65.jpg',...
    'frame73.jpg',...
    'frame81.jpg',...
    'frame89.jpg',...
    'frame97.jpg',...
    'frame105.jpg',...
    'frame113.jpg',...
    'frame121.jpg',...
    'frame129.jpg',...
    'frame137.jpg',...
    'frame145.jpg',...
    'frame153.jpg',...
    };

% Detect checkerboards in images
[imagePoints, boardSize, imagesUsed] = detectCheckerboardPoints(imageFileNames);
imageFileNames = imageFileNames(imagesUsed);

% Generate world coordinates of the corners of the squares
squareSize = 23;  % in units of 'mm'
worldPoints = generateCheckerboardPoints(boardSize, squareSize);

% Calibrate the camera
[cameraParams, imagesUsed, estimationErrors] = estimateCameraParameters(imagePoints, worldPoints, ...
    'EstimateSkew', false, 'EstimateTangentialDistortion', false, ...
    'NumRadialDistortionCoefficients', 2, 'WorldUnits', 'mm', ...
    'InitialIntrinsicMatrix', [], 'InitialRadialDistortion', []);

% View reprojection errors
h1=figure; showReprojectionErrors(cameraParams, 'BarGraph');

% Visualize pattern locations
h2=figure; showExtrinsics(cameraParams, 'CameraCentric');

% Display parameter estimation errors
displayErrors(estimationErrors, cameraParams);

% For example, you can use the calibration data to remove effects of lens distortion.
originalImage = imread(imageFileNames{1});
undistortedImage = undistortImage(originalImage, cameraParams);

% See additional examples of how to use the calibration data.  At the prompt type:
% showdemo('MeasuringPlanarObjectsExample')
% showdemo('StructureFromMotionExample')
end